//{ Driver Code Starts
//Initial template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
//User function template for C++

class Solution{
public:
    //Function to reverse every sub-array group of size k.
    void reverseInGroups(vector<long long>& arr, int n, int k){
        // code here
        int split = 1;
        int z = 0, m = 0;
        if(k>=n) {
            k = n;
            m = split;
        }
        else {
            split = n/k;
        }
        z = split;
        int i = k;
        int x = 0;
        int y = n-1;
        int t = 1;
        while(split>0) {
            while(i>x) {
                long long tmp = arr[i-1];
                arr[i-1] = arr[x];
                arr[x] = tmp;
                x=x+1;
                i--;
            }
            x = 0;
            x += k;
            t++;
            i = t*k;
            split--;
        }
        if(m==1) return;
        else {
        k = z*k;
            do {
                long long tmp = arr[k];
                arr[k] = arr[y];
                arr[y] = tmp;
                k++;
                y--;
            } while(y>k);
            
        }
    }
};

//{ Driver Code Starts.
int main() {
    int t; 
    cin >> t; 
    while(t--){ 
        int n;
        cin >> n; 
        vector<long long> arr; 
        int k;
        cin >> k; 

        for(long long i = 0; i<n; i++)
        {
            long long x;
            cin >> x; 
            arr.push_back(x); 
        }
        Solution ob;
        ob.reverseInGroups(arr, n, k);
        
        for(long long i = 0; i<n; i++){
            cout << arr[i] << " "; 
        }
        cout << endl;
    }
    return 0;
}


// } Driver Code Ends