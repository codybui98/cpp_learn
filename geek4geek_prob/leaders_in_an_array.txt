------------------------CODY-----------------------------------
//{ Driver Code Starts
// C++ program to remove recurring digits from
// a given number
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
    

class Solution{
    //Function to find the leaders in the array.
    public:
    vector<int> leaders(int a[], int n){
        // Code here
        int i=0,j=0,cnt = 0, x = 0;
        vector<int> out;
        while(i<n) {
            if(a[i]>a[j] || a[i]==a[j] ) {
                cnt = cnt+1;
                j = i+1*(cnt+1);
            }
            else {
                i++;
                cnt = 0;
                j = i+1;
            }
            if(cnt == n-1-i && i!=n-1) {
                cnt = 0;
                out.push_back(a[i]);
                i++;
                j = i+1;
            }
        }
        out.push_back(a[n-1]);
        return out;
    }
};

//{ Driver Code Starts.

int main()
{
   long long t;
   cin >> t;//testcases
   while (t--)
   {
       long long n;
       cin >> n;//total size of array
        
        int a[n];
        
        //inserting elements in the array
        for(long long i =0;i<n;i++){
            cin >> a[i];
        }
        Solution obj;
        //calling leaders() function
        vector<int> v = obj.leaders(a, n);
        
        //printing elements of the vector
        for(auto it = v.begin();it!=v.end();it++){
            cout << *it << " ";
        }
        
        cout << endl;

   }
}

// } Driver Code Ends
--------------------MEMBER-----------------------
vector<int> ans;

        ans.push_back(arr[n-1]);

        int temp=arr[n-1];

        for(int i=n-2;i>=0;i--){

            if(arr[i]>=temp){

                ans.push_back(arr[i]);

                temp=arr[i];

            }

        }

        reverse(ans.begin(),ans.end());

        return ans;